/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.views;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import UI.controllers.MainFrameController;
import javax.swing.JOptionPane;

/**
 *
 * @author Jose
 */
public class MainFrame extends javax.swing.JFrame {
    public static final int OPEN_FILE = 101;
    public static final int SAVE_FILE = 202;
    public static final int CESAR = 0;
    public static final int SUSTITUTION = 1;
    public static final int RCA = 2;
    /**
     * Creates new form MainInterface
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPClearText = new javax.swing.JPanel();
        jLClearText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAClearText = new javax.swing.JTextArea();
        jToolBar1 = new javax.swing.JToolBar();
        jBOpenClearText = new javax.swing.JButton();
        jBSaveClearText = new javax.swing.JButton();
        jBOpenCipherText = new javax.swing.JButton();
        jBSaveCipherText = new javax.swing.JButton();
        jPCipherText = new javax.swing.JPanel();
        jLCipherText = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTACipherText = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCCipherChooser = new javax.swing.JComboBox();
        jLKey = new javax.swing.JLabel();
        jTKey = new javax.swing.JTextField();
        jBCifrar = new javax.swing.JButton();
        jBDescifrar = new javax.swing.JButton();
        jTSecondKey = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLClearText.setText("Texto claro");

        jTAClearText.setColumns(20);
        jTAClearText.setLineWrap(true);
        jTAClearText.setRows(5);
        jTAClearText.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTAClearText);

        javax.swing.GroupLayout jPClearTextLayout = new javax.swing.GroupLayout(jPClearText);
        jPClearText.setLayout(jPClearTextLayout);
        jPClearTextLayout.setHorizontalGroup(
            jPClearTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPClearTextLayout.createSequentialGroup()
                .addComponent(jLClearText)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        );
        jPClearTextLayout.setVerticalGroup(
            jPClearTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPClearTextLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLClearText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        jBOpenClearText.setText("Abrir texto claro");
        jBOpenClearText.setFocusable(false);
        jBOpenClearText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBOpenClearText.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBOpenClearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOpenClearTextActionPerformed(evt);
            }
        });
        jToolBar1.add(jBOpenClearText);

        jBSaveClearText.setText("Guardar Texto Claro");
        jBSaveClearText.setFocusable(false);
        jBSaveClearText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBSaveClearText.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBSaveClearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveClearTextActionPerformed(evt);
            }
        });
        jToolBar1.add(jBSaveClearText);

        jBOpenCipherText.setText("Abrir Texto Cifrado");
        jBOpenCipherText.setFocusable(false);
        jBOpenCipherText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBOpenCipherText.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBOpenCipherText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOpenCipherTextActionPerformed(evt);
            }
        });
        jToolBar1.add(jBOpenCipherText);

        jBSaveCipherText.setText("Guardar Texto Cifrado");
        jBSaveCipherText.setFocusable(false);
        jBSaveCipherText.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBSaveCipherText.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBSaveCipherText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSaveCipherTextActionPerformed(evt);
            }
        });
        jToolBar1.add(jBSaveCipherText);

        jLCipherText.setText("Texto cifrado");

        jTACipherText.setColumns(20);
        jTACipherText.setLineWrap(true);
        jTACipherText.setRows(5);
        jTACipherText.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTACipherText);

        javax.swing.GroupLayout jPCipherTextLayout = new javax.swing.GroupLayout(jPCipherText);
        jPCipherText.setLayout(jPCipherTextLayout);
        jPCipherTextLayout.setHorizontalGroup(
            jPCipherTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCipherTextLayout.createSequentialGroup()
                .addComponent(jLCipherText)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
        );
        jPCipherTextLayout.setVerticalGroup(
            jPCipherTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCipherTextLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCipherText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        jLabel1.setText("Selección del método de cifrado");

        jCCipherChooser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cesar", "Sustitución", "RCA", "Item 3", "Item 4" }));
        jCCipherChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCCipherChooserActionPerformed(evt);
            }
        });

        jLKey.setText("Desplazamiento (k)");

        jTKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTKeyActionPerformed(evt);
            }
        });

        jBCifrar.setText("Cifrar");
        jBCifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCifrarActionPerformed(evt);
            }
        });

        jBDescifrar.setText("Descifrar");
        jBDescifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDescifrarActionPerformed(evt);
            }
        });

        jTSecondKey.setVisible(false);
        jTSecondKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTSecondKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLKey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTKey, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTSecondKey, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCCipherChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBCifrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBDescifrar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCCipherChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLKey)
                    .addComponent(jTKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTSecondKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCifrar)
                    .addComponent(jBDescifrar))
                .addGap(0, 27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 265, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPClearText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPCipherText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPClearText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPCipherText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private File showFileChooserWindow(int window){
        try{
                File file = null;
                FileNameExtensionFilter filterExtension=new FileNameExtensionFilter("Texto(*.txt)", "txt");
                if(window == SAVE_FILE){
                    JFileChooser saveWindow = new JFileChooser(){
                        @Override
                        public void approveSelection(){
                            File f = getSelectedFile();
                            if(f.exists() && getDialogType() == SAVE_DIALOG){
                                int result = JOptionPane.showConfirmDialog(this,"Ya existe el archivo, ¿Desea sobreescribirlo?","Archivo existente",JOptionPane.YES_NO_CANCEL_OPTION);
                                switch(result){
                                    case JOptionPane.YES_OPTION:
                                        super.approveSelection();
                                        return;
                                    case JOptionPane.NO_OPTION:
                                        return;
                                    case JOptionPane.CLOSED_OPTION:
                                        return;
                                    case JOptionPane.CANCEL_OPTION:
                                        cancelSelection();
                                        return;
                                }
                            }
                            super.approveSelection();
                        }     
                    };
                    saveWindow.setFileFilter(filterExtension);
                    saveWindow.showSaveDialog(this);
                    file = saveWindow.getSelectedFile();
                }
                else if(window == OPEN_FILE){
                    JFileChooser loadWindow = new JFileChooser();
                    loadWindow.setFileFilter(filterExtension);
                    loadWindow.showOpenDialog(this);
                    file = loadWindow.getSelectedFile();
                }
                return file;
            }catch(Exception e){
                System.out.println(e.toString());
                return null;
            }
    }
    private void jBSaveClearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveClearTextActionPerformed
        File file = showFileChooserWindow(SAVE_FILE);
        if(file!=null){
            MainFrameController.saveText(file, jTAClearText.getText());
        }
    }//GEN-LAST:event_jBSaveClearTextActionPerformed

    private void jBOpenCipherTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOpenCipherTextActionPerformed
        File file = showFileChooserWindow(OPEN_FILE);
        if(file!=null){
            jTACipherText.setText(MainFrameController.loadText(file));
        }
    }//GEN-LAST:event_jBOpenCipherTextActionPerformed

    private void jBSaveCipherTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSaveCipherTextActionPerformed
        File file = showFileChooserWindow(SAVE_FILE);
        if(file!=null)
            MainFrameController.saveText(file, jTACipherText.getText());
    }//GEN-LAST:event_jBSaveCipherTextActionPerformed

    private void jBOpenClearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOpenClearTextActionPerformed
        File file = showFileChooserWindow(OPEN_FILE);
        if(file!=null){
            jTAClearText.setText(MainFrameController.loadText(file));
        }
    }//GEN-LAST:event_jBOpenClearTextActionPerformed

    private void jCCipherChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCCipherChooserActionPerformed
        // TODO add your handling code here:
        int index = jCCipherChooser.getSelectedIndex();
        switch(index){
            case CESAR:
                jLKey.setText("Desplazamiento (k)");
                jTSecondKey.setVisible(false);
                System.out.println(jTKey.getAlignmentX()+" "+jTKey.getAlignmentY());
                break;
            case SUSTITUTION:
                jLKey.setText("Clave");
                jTSecondKey.setVisible(false);
                //jTKey.setPreferredSize(new Dimension(0, 30));
                break;
            default:
                ;
        }
    }//GEN-LAST:event_jCCipherChooserActionPerformed

    private void jBCifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCifrarActionPerformed
        String cipherText;
        cipherText = MainFrameController.cipherText(jTAClearText.getText(),jCCipherChooser.getSelectedIndex(),jTKey.getText(),jTSecondKey.getText());
        jTACipherText.setText(cipherText);
    }//GEN-LAST:event_jBCifrarActionPerformed

    private void jBDescifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDescifrarActionPerformed
        String clearText;
        clearText = MainFrameController.decodeText(jTACipherText.getText(),jCCipherChooser.getSelectedIndex(),jTKey.getText(),jTSecondKey.getText());
        jTAClearText.setText(clearText);
    }//GEN-LAST:event_jBDescifrarActionPerformed

    private void jTSecondKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTSecondKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTSecondKeyActionPerformed

    private void jTKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTKeyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCifrar;
    private javax.swing.JButton jBDescifrar;
    private javax.swing.JButton jBOpenCipherText;
    private javax.swing.JButton jBOpenClearText;
    private javax.swing.JButton jBSaveCipherText;
    private javax.swing.JButton jBSaveClearText;
    private javax.swing.JComboBox jCCipherChooser;
    private javax.swing.JLabel jLCipherText;
    private javax.swing.JLabel jLClearText;
    private javax.swing.JLabel jLKey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPCipherText;
    private javax.swing.JPanel jPClearText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTACipherText;
    private javax.swing.JTextArea jTAClearText;
    private javax.swing.JTextField jTKey;
    private javax.swing.JTextField jTSecondKey;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
